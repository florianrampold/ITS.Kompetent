version: "3.8"
services:
  db:
    image: mysql:8.0
    platform: linux/amd64
    volumes:
      - ./data/db:/var/lib/mysql
      - ./backend/db/dump_file.sql:/docker-entrypoint-initdb.d/dump_file.sql
    ports:
      - "3307:3306" # Map port 3307 on the host to 3306 in the container
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -P 3306 -u root -p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      retries: 5
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: always
    container_name: itskompetent_db

  backend:
    build: ./backend
    volumes:
      - ./backend/src:/code/src
      - static_volume:/code/src/staticfiles
      # - ./backend/keys:/code/keys  # Mount the directory containing the RSA keys
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASS}@${DB_HOST}/${DB_NAME}
      - API_URL=${API_URL}
    container_name: backend

  nginx:
    build:
      context: .
    volumes:
      #   - /etc/letsencrypt/live/yourdomain.com/fullchain.pem:/etc/nginx/ssl/nginx.crt:ro  If a real certificate is used generated by certbot this line can be used to copy the certificate from the local machine to the docker container.
      #   - /etc/letsencrypt/live/yourdomain.com/privkey.pem:/etc/nginx/ssl/nginx.key:r If a real private key is used generated by certbot this line can be used to copy the certificate from the local machine to the docker container.
      - static_volume:/usr/share/nginx/html/static
      - ./backend/src/media:/usr/share/nginx/html/media/backend
    ports:
      - "80:80"
      # - "443:443" If ssl is used (https connection)
    container_name: nginx-custom
volumes:
  static_volume:
